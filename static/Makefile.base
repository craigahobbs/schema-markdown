# -*- makefile-gmake -*-
# Licensed under the MIT License
# https://github.com/craigahobbs/schema-markdown/blob/master/LICENSE

.DEFAULT_GOAL := help

# Node
NODE_IMAGE ?= node:14-slim
NODE_DOCKER := $(if $(NO_DOCKER),,docker run --rm -u `id -u`:`id -g` -v `pwd`:`pwd` -w `pwd` -e HOME=`pwd`/build $(NODE_IMAGE))

# Develpment dependencies
AVA_VERSION ?= ~3.15.0
BROWSER_ENV_VERSION ?= ~3.3.0
ESLINT_VERSION ?= ~7.23.0
ESM_VERSION ?= ~3.2.0
JSDOC_VERSION ?= ~3.6.0
NYC_VERSION ?= ~15.1.0

# jsdoc
JSDOC_ARGS ?= src

# gh-pages source paths
GHPAGES_SRC ?= src/

build/npm.build:
ifeq '$(NO_DOCKER)' ''
	if [ "$$(docker images -q $(NODE_IMAGE))" = "" ]; then docker pull -q $(NODE_IMAGE); fi
endif
	$(NODE_DOCKER) npm install --save-dev \
		ava@$(AVA_VERSION) \
		browser-env@$(BROWSER-ENV_VERSION) \
		eslint@$(ESLINT_VERSION) \
		esm@$(ESM_VERSION) \
		jsdoc@$(JSDOC_VERSION) \
		nyc@$(NYC_VERSION)
	mkdir -p $(dir $@)
	touch $@

.PHONY: _help help
help: _help
_help:
	@echo 'usage: make [clean|commit|cover|doc|gh-pages|lint|superclean|test]'

.PHONY: commit
commit: test lint doc cover

.PHONY: _test test
test: _test
_test: build/npm.build
	$(NODE_DOCKER) npm test -- $(if $(TEST),--match '$(TEST)')

.PHONY: _cover cover
cover: _cover
_cover: _test build/npm.build
    # Note: Remove the following line and the dependency on "_test" when "esm" (for Ava) module is removed
	rm -rf node_modules/.cache/esm
	$(NODE_DOCKER) npx nyc $(NYC_ARGS) --cache true --cache-dir build/nyc-cache --check-coverage --reporter html --reporter text --report-dir build/coverage --temp-dir build/tmp \
		npm test -- $(if $(TEST),--match '$(TEST)')

.PHONY: _lint lint
lint: _lint
_lint: build/npm.build
	$(NODE_DOCKER) npx eslint $(ESLINT_ARGS) -c .eslintrc.js -f unix .eslintrc.js src tests

.PHONY: _doc doc
doc: _doc
_doc: build/npm.build
	$(NODE_DOCKER) npx jsdoc --pedantic $(if $(ALL),-a all) $(JSDOC_ARGS) -d build/doc

.PHONY: _clean clean
clean: _clean
_clean:
	rm -rf build node_modules package-lock.json

.PHONY: _superclean superclean
superclean: _superclean
_superclean: clean
ifeq '$(NO_DOCKER)' ''
	-docker rmi -f $(NODE_IMAGE)
endif

.PHONY: _gh-pages gh-pages
gh-pages: _gh-pages
_gh-pages: commit
ifneq '$(GHPAGES_SRC)' ''
	if [ ! -d ../$(notdir $(CURDIR)).gh-pages ]; then git clone -b gh-pages `git config --get remote.origin.url` ../$(notdir $(CURDIR)).gh-pages; fi
	cd ../$(notdir $(CURDIR)).gh-pages && git pull
	rsync -rv --delete --exclude=.git/ $(GHPAGES_SRC) ../$(notdir $(CURDIR)).gh-pages
	touch ../$(notdir $(CURDIR)).gh-pages/.nojekyll
endif
